{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"Class Template": {
		"prefix": "Class",
		"body": [
			"#ifndef ${TM_FILENAME/([\\.])|(.*)/${1:_}${2:/upcase}/}"
			"# define ${TM_FILENAME/[\\.-]/_/g}"
			""
			"# include <iostream>"
			""
			"class ${TM_FILENAME_BASE}"
			"{"
			"	public:"
			"		${TM_FILENAME_BASE}(void);"
			"		~${TM_FILENAME_BASE}(void);"
			""
			"	private:"
			"		$0"
			"};"
			""
			"std::ostream	&operator<<(std::ostream &os, ${TM_FILENAME_BASE} const &c);"
			""
			"#endif"
		],
		"description": "A template for a Class"
	}
}
